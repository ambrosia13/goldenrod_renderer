; SPIR-V
; Version: 1.5
; Generator: NVIDIA Slang Compiler; 0
; Bound: 85
; Schema: 0
OpCapability Shader
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %vertex "vertex" %gl_VertexIndex

; Debug Information
OpSource Slang 1
OpName %VertexOutput "VertexOutput"                 ; id %5
OpMemberName %VertexOutput 0 "clipPosition"
OpMemberName %VertexOutput 0 "uv"
OpMemberName %VertexOutput 0 "texcoord"
OpName %output "output"                             ; id %10
OpName %output "output"                             ; id %10
OpName %Vertex "Vertex"                             ; id %12
OpMemberName %Vertex 0 "position"
OpMemberName %Vertex 0 "uv"
OpMemberName %Vertex 0 "texcoord"
OpName %position "position"                         ; id %29
OpName %uv "uv"                                     ; id %30
OpName %texcoord "texcoord"                         ; id %31
OpName %Vertex__init "Vertex.$init"                 ; id %27
OpName %vertices "vertices"                         ; id %60
OpName %vertex "vertex"                             ; id %2

; Annotations
OpDecorate %gl_VertexIndex BuiltIn VertexIndex

; Types, variables and constants
%void = OpTypeVoid
%3 = OpTypeFunction %void
%float = OpTypeFloat 32
%v4float = OpTypeVector %float 4
%v2float = OpTypeVector %float 2
%VertexOutput = OpTypeStruct %v4float %v2float %v2float
%_ptr_Function_VertexOutput = OpTypePointer Function %VertexOutput
%Vertex = OpTypeStruct %v2float %v2float %v2float
%int = OpTypeInt 32 1
%int_4 = OpConstant %int 4
%_arr_Vertex_int_4 = OpTypeArray %Vertex %int_4
%_ptr_Function__arr_Vertex_int_4 = OpTypePointer Function %_arr_Vertex_int_4
%uint = OpTypeInt 32 0
%int_6 = OpConstant %int 6
%_arr_uint_int_6 = OpTypeArray %uint %int_6
%_ptr_Function__arr_uint_int_6 = OpTypePointer Function %_arr_uint_int_6
%_ptr_Input_int = OpTypePointer Input %int
%28 = OpTypeFunction %Vertex %v2float %v2float %v2float
%_ptr_Function_Vertex = OpTypePointer Function %Vertex
%int_0 = OpConstant %int 0
%_ptr_Function_v2float = OpTypePointer Function %v2float
%int_1 = OpConstant %int 1
%int_2 = OpConstant %int 2
%float_n1 = OpConstant %float -1
%47 = OpConstantComposite %v2float %float_n1 %float_n1
%float_0 = OpConstant %float 0
%float_1 = OpConstant %float 1
%49 = OpConstantComposite %v2float %float_0 %float_1
%52 = OpConstantComposite %v2float %float_0 %float_0
%54 = OpConstantComposite %v2float %float_1 %float_n1
%55 = OpConstantComposite %v2float %float_1 %float_1
%56 = OpConstantComposite %v2float %float_1 %float_0
%59 = OpConstantComposite %v2float %float_n1 %float_1
%uint_0 = OpConstant %uint 0
%uint_1 = OpConstant %uint 1
%uint_2 = OpConstant %uint 2
%uint_3 = OpConstant %uint 3
%62 = OpConstantComposite %_arr_uint_int_6 %uint_0 %uint_1 %uint_2 %uint_0 %uint_2 %uint_3
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Function_v4float = OpTypePointer Function %v4float
%gl_VertexIndex = OpVariable %_ptr_Input_int Input  ; BuiltIn VertexIndex

; Function vertex
%vertex = OpFunction %void None %3
%4 = OpLabel
%output = OpVariable %_ptr_Function_VertexOutput Function
%16 = OpVariable %_ptr_Function__arr_Vertex_int_4 Function
%21 = OpVariable %_ptr_Function__arr_uint_int_6 Function
%22 = OpLoad %int %gl_VertexIndex
%25 = OpBitcast %uint %22
%26 = OpFunctionCall %Vertex %Vertex__init %47 %49 %52
%53 = OpFunctionCall %Vertex %Vertex__init %54 %55 %56
%57 = OpFunctionCall %Vertex %Vertex__init %55 %56 %55
%58 = OpFunctionCall %Vertex %Vertex__init %59 %52 %49
%vertices = OpCompositeConstruct %_arr_Vertex_int_4 %26 %53 %57 %58
OpStore %16 %vertices
OpStore %21 %62
%69 = OpAccessChain %_ptr_Function_uint %21 %25
%70 = OpLoad %uint %69
%71 = OpAccessChain %_ptr_Function_Vertex %16 %70
%72 = OpLoad %Vertex %71
%74 = OpAccessChain %_ptr_Function_v4float %output %int_0
%75 = OpCompositeExtract %v2float %72 0
%76 = OpVectorShuffle %v2float %75 %75 0 1
%77 = OpCompositeConstruct %v4float %76 %float_0 %float_1
OpStore %74 %77
%79 = OpAccessChain %_ptr_Function_v2float %output %int_1
%80 = OpCompositeExtract %v2float %72 1
OpStore %79 %80
%82 = OpAccessChain %_ptr_Function_v2float %output %int_2
%83 = OpCompositeExtract %v2float %72 2
OpStore %82 %83
OpFunctionEnd

; Function Vertex__init
%Vertex__init = OpFunction %Vertex None %28
%position = OpFunctionParameter %v2float
%uv = OpFunctionParameter %v2float
%texcoord = OpFunctionParameter %v2float
%32 = OpLabel
%34 = OpVariable %_ptr_Function_Vertex Function
%37 = OpAccessChain %_ptr_Function_v2float %34 %int_0
OpStore %37 %position
%40 = OpAccessChain %_ptr_Function_v2float %34 %int_1
OpStore %40 %uv
%43 = OpAccessChain %_ptr_Function_v2float %34 %int_2
OpStore %43 %texcoord
%45 = OpLoad %Vertex %34
OpReturnValue %45
OpFunctionEnd
